#!/bin/bash

usage() {
    
    echo "
    
    When no options are passed in, this script generates the NCTC database. It must be run in the Microtrawler
    github repo so that it can find the helper_scripts/nctc directory. This works by literally going through
    every NCTC acc. number between $min and $max and scraping the html page. 5 options.

    -o,--output:    full path to dump desired tsv output to. default is ./YYYY-MM-DD_nctc_db.tsv
    -s,--sleep:     amount of seconds to sleep between strain queries. default is 5 seconds
    -m,--max:       max NCTC acc. number to trawl. default is I try to figure out most recent strain myself.
    -n,--min:       min NCTC acc. number to trawl. default is 1
    -c, --clean:    sometimes a column in the output is basically empty. this option removes all columns with < 
                    the specified number of values. default is 2.
    --scriptdir:    path to the helper_scripts directory in the Git. Default assumes you're running the trawler
                    from the repo directory ('./helper_scripts')
    "

}


# search for NCTC number corresponding to most recent database addition
#  I literally define this as the biggest NCTC acc. number I can find on the new-strains page.
#  might be a better way to do this.
find_max_acc() {
    echo $(grep -o "<a[^*>]*nctc\">" <(curl -s https://www.culturecollections.org.uk/products/bacteria/new-bacteria-strains.aspx) | cut -d'?' -f2 | cut -d'+' -f2 | cut -d'&' -f1 | sort -n | tail -n1)
}

# build NCTC database 
build_db() {
    
    # loop through all acc. number urls 
    for i in $(seq "$1" "$2"); do
        url="https://www.phe-culturecollections.org.uk/products/bacteria/detail.jsp?refId=NCTC+"$i"&collection=nctc"
        python3 "$SCRIPTDIR"/nctc/trawler.py "$url" "$3"
       
        # check if we failed or not
        status=$?
        #echo "hi"
        #echo "$status"
        [ $status -eq 0 ] && echo -e "\033[1;32m NCTC $i successfully trawled \033[m" || echo -e "\033[1;31m NCTC $i failed\033[m"

        # sleep for a bit so we don't crash anything
        sleep $4
    done
}

# read in args
main() {
    out_dest="$(pwd)/$(date +%Y-%m-%d)_nctc_db.tsv"
    sleep_time=5
    max_acc=$(find_max_acc)
    min_acc=1
    clean=2
    SCRIPTDIR="./helper_scripts"
    for i in "$@"; do
    case $i in
        -o|--output)
        out_dest="$2"
        shift
        shift
        ;;
        -s|--sleep)
        sleep_time="$2"
        shift
        shift
        ;;
        -m|--max)
        max_acc="$2"
        shift
        shift
        ;;
        -n|--min)
        min_acc="$2"
        shift
        shift
        ;;
        -c|--clean)
        clean="$2"
        shift
        shift
        ;;
        --scriptdir)
        SCRIPTDIR="$2"
        shift
        shift
        ;;
        -h|--help)
        usage
        exit
        ;;
        *)
        ;;
    esac
    done

    mkdir -p $(dirname $out_dest)

    # build database
    build_db "$min_acc" "$max_acc" "$out_dest" "$sleep_time"

    # remove all columns w/ '< $clean' number of entries
    python3 $SCRIPTDIR/nctc/clean.py "$out_dest" "$clean"
}

main "$@"
