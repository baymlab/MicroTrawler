#!/bin/bash

# get ena assembly accession number
check_ena_assembly() {
    echo -e "$3_num\taccession\tversion\tassembly_name\tdescription" > $1
    while read lines; do
        db_acc=$(echo $lines)

        # real stupid way to check if search failed
        prev=$(wc -l $2)
        
        # search the ena with the NCTC accession number. couple things. first, we're only searching the assembly database. if somebody decided to not generate a full-fledged assembly from the sequence then we don't catch it. second, we're literally just searching the accession number. it is possible that we get results that are irrelevant, or somebody didn't label the strain label with the nctc number.
        # if we get a hit, we append it to our file
        curl -X GET -s "https://www.ebi.ac.uk/ena/portal/api/search?result=assembly&query=strain=$db_acc" | awk -v acc=$db_acc '{if(NR!=1){printf "%s\t%s\t%s\t%s\t%s\n", acc, $1, $2, $3, $4}}' >> $2
        
        # we're checking if it was found
        next=$(wc -l $2)
        [[ $prev == $next ]] && echo "$db_acc not found" || echo "$db_acc found"
    done<$1
}

check_genbank_assembly() {
    return 2
}

check_sra() {
    return 2
}

# read in args
main() {

    INPUT=""
    OUTPUT="./assembly_out"
    DB="./"
    for i in "$@"; do
    case $i in

        # input file is list of db accessions
        -i|--input)
        INPUT="$2"
        shift
        shift
        ;;

        # max year to subset samples to
        -d|--db)
        DB="$2"
        shift
        shift
        ;;

        # output file
        -o|--output)
        OUTPUT="$2"
        shift
        shift
        ;;
        *)
        ;;
    esac
    done
    check_ena_assembly $INPUT $OUTPUT $DB
}

main "$@"
